package com.xxl.sso.core.conf;

import com.xxl.sso.core.entity.ReturnT;

/**
 * conf
 *
 * @author xuxueli 2018-04-02 19:18:04
 */
public class Conf {

    /**
     * sso sessionid, between browser and sso-server (web + token client)
     */
    public static final String SSO_SESSIONID = "xxl_sso_sessionid";


    /**
     * add by ywf ,for add authorization code, the paramete should be included in the request
      */


    public static final String SSO_GRANT_TYPE = "grant_type";
    public static final String SSO_RES_TYPE = "response_type";
    public static final String SSO_RES_TYPE_TOKEN = "token";
    public static final String SSO_CLIENT_ID = "client_id";
    public static final String SSO_SCOPE = "scope";
    public static final String SSO_STATE = "state";
    public static final String SSO_CODE = "code";
    public static final String SSO_GRANT_REQUEST = "authorization_code";
    public static final String SSO_ACCESS_TOKEN = "access_token";
    public static final String SSO_TOKEN_TYPE = "token_type";
    public static final String SSO_EXPIRES_IN = "expires_in";
    public static final String SSO_BEARER_TOKEN_TYPE = "bearer";
    public static final Integer SSO_EXPIRES_IN_TIME = 3600;
    public static final String SSO_REFRESH_TOKEN = "refresh_token";


    /**
     * error response for  authorization code
     */
    public static final String SSO_ERROR_INVALID_REQUEST = "invalid_request";
    public static final String SSO_ERROR_UNAUTHORIZED_CLIENT = "unauthorized_client";
    public static final String SSO_ERROR_ACCESS_DENIED = "access_denied";
    public static final String SSO_ERROR_UNSUPPORTED_RESPONSE_TYPE = "unsupported_response_type";
    public static final String SSO_ERROR_INVALID_SCOPE = "invalid_scope";
    public static final String SSO_ERROR_SERVER_ERROR = "server_error";
    public static final String SSO_ERROR_TEMPORARILY_UNAVAILABLE = "temporarily_unavailable";
    public static final String SSO_ERROR_ERROR_DESCRIPTION = "error_description";
    public static final String SSO_ERROR_ERROR_URI = "error_uri";

    public static final String SSO_GRANT = "/oauth/authorize";

    /**
     * logout url, server relative path (web client)
     */
    public static final String SSO_URI_TOKEN = "/oauth/token";
    public static final String SSO_URI_CHECK_TOKEN = "/oauth/check_token";


    /**
     * add by ywf end ,for add authorization code, the paramete should be included in the request
     */


    /**
     * SSO_tokenï¼Œ the token generated by server
     */

    public static final String SSO_TOKEN = "xxl_sso_token";


    /**
     * redirect url (web client)
     */
    public static final String REDIRECT_URL = "redirect_url";

    /**
     * sso user, request attribute (web client)
     */
    public static final String SSO_USER = "xxl_sso_user";


    /**
     * sso server address (web + token client)
     */
    public static final String SSO_SERVER = "sso_server";

    /**
     * login url, server relative path (web client)
     */
    public static final String SSO_LOGIN = "/login";
    /**
     * logout url, server relative path (web client)
     */
    public static final String SSO_LOGOUT = "/logout";





    /**
     * logout path, client relatice path
     */
    public static final String SSO_LOGOUT_PATH = "SSO_LOGOUT_PATH";

    /**
     * excluded paths, client relatice path, include path can be set by "filter-mapping"
     */
    public static final String SSO_EXCLUDED_PATHS = "SSO_EXCLUDED_PATHS";


    /**
     * login fail result
     */
    public static final ReturnT<String> SSO_LOGIN_FAIL_RESULT = new ReturnT(501, "sso not login.");


}

